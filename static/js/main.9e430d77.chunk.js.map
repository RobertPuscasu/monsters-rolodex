{"version":3,"sources":["pages/Card/Card.tsx","components/card-list/card-list.tsx","pages/SearchBox/SearchBox.tsx","App.tsx","utils/useDebounced.ts","index.tsx"],"names":["Card","monster","className","alt","src","id","key","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","props","React","useState","setMonsters","searchField","setSearchField","useEffect","fromFetch","pipe","filter","res","ok","switchMap","response","json","tap","users","catchError","err","of","error","message","subscribe","console","log","validateDebounced","dueTime","effect","Subject","input$","callbackEffect","useCallback","debounceTime","distinctUntilChanged","value","next","useDebounced","filteredMonsters","toLocaleLowerCase","includes","toLowerCase","event","target","render","document","getElementById"],"mappings":"2WAmBeA,G,kBAXoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjC,uBAAKC,UAAU,kBACb,uBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,sBAAIC,IAAKL,EAAQI,IAAjB,IAAuBJ,EAAQM,KAA/B,KACA,yBAAIN,EAAQO,UCEDC,EAR2B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC3C,OAAQ,uBAAKR,UAAU,aACtBQ,EAASC,KAAI,SAAAV,GAAO,OACnB,gBAAC,EAAD,CAAMK,IAAKL,EAAQI,GAAIJ,QAAWA,S,kCCGtBW,EAL8B,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAE3D,OAAQ,yBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC4CtEG,EA1Ce,SAAAC,GAAU,IAAD,EACLC,IAAMC,SAAqB,IADtB,mBAC9BV,EAD8B,KACpBW,EADoB,OAECF,IAAMC,SAAiB,IAFxB,mBAE9BE,EAF8B,KAEjBC,EAFiB,KAIrCC,qBAAU,WACRC,YAAU,8CACPC,KACCC,aAAO,SAAAC,GAAG,OAAIA,EAAIC,MAClBC,aAAU,SAAAC,GAAQ,OAAIA,EAASC,UAC/BC,aAAI,SAAAC,GAAK,OAAIb,EAAYa,MACzBC,aAAW,SAAAC,GAAG,OAAIC,YAAG,CAAEC,OAAO,EAAMC,QAASH,EAAIG,cAElDC,UAAUC,QAAQC,OACpB,IAEH,IAAMC,ECzBD,SACLC,EACAC,GACqB,IAAD,EACHzB,mBAAS,IAAI0B,KAAvBC,EADa,oBAEdC,EAAiBC,sBAAYJ,EAAQ,IAM3C,OALArB,qBAAU,WACRuB,EACGrB,KAAKwB,YAAaN,GAAUO,eAC5BX,UAAUQ,KACZ,CAACJ,EAASG,EAAQC,IACd,SAACI,GAAD,OAAoBL,EAAOM,KAAKD,IDcbE,CAjBY,IAmBpC/B,GAQIgC,EAAmB7C,EAASiB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQM,KAAKiD,oBAAoBC,SAASnC,EAAYoC,kBAGxD,OACE,yBAAKxD,UAAU,OACb,kDACA,kBAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAZ5B,SAAC6C,GAChB,IAAMP,EAAQO,EAAMC,OAAOR,MAC3BT,EAAkBS,MAWhB,kBAAC,EAAD,CAAU1C,SAAU6C,GACjB7C,EAASC,KAAI,SAACV,GAAD,OACZ,wBAAIK,IAAKL,EAAQI,IAAKJ,EAAQM,YE5CxCsD,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9e430d77.chunk.js","sourcesContent":["import * as React from 'react';\nimport { IMonster } from '../../interfaces/models/monster.model';\nimport './style.css';\n\ninterface ICardProps {\n  monster: IMonster;\n}\n\nconst Card: React.FC<ICardProps> = ({ monster }) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n    />\n    <h1 key={monster.id}> {monster.name} </h1>\n    <p>{monster.email}</p>\n  </div>\n);\n\nexport default Card;\n","import * as React from 'react'\nimport './card-list.css'\nimport { IMonster } from '../../interfaces/models/monster.model';\n\nimport Card from '../../pages/Card/Card'\n\ninterface CardListProps {\n\tmonsters: IMonster[]\n}\nconst CardList: React.FC<CardListProps> = ({monsters}) => { \n\treturn (<div className='card-list'>{\n\t\tmonsters.map(monster => (\n\t\t\t<Card key={monster.id} monster = {monster}></Card>\n\t\t))\n\t}</div>);\n}\n\nexport default CardList","\nimport './style.css'\nimport * as React from 'react';\nimport { ChangeEvent } from 'react';\n\ninterface ISearchBoxProps {\n\tplaceholder: string,\n\thandleChange: (event: ChangeEvent<HTMLInputElement>) => void\n\n}\nconst SearchBox: React.FC<ISearchBoxProps> = ({placeholder, handleChange}) => {\n\n\treturn (<input className='search' type=\"search\" placeholder={placeholder} onChange={handleChange} />)\n}\n\nexport default SearchBox","import React, { useEffect, ChangeEvent } from 'react';\nimport { switchMap, catchError, filter, tap } from 'rxjs/operators';\nimport { fromFetch } from 'rxjs/fetch';\nimport { of } from 'rxjs';\nimport './App.css';\nimport CardList from './components/card-list/card-list';\nimport { IMonster } from './interfaces/models/monster.model';\nimport { useDebounced } from './utils/useDebounced';\nimport SearchBox from './pages/SearchBox/SearchBox';\n\ninterface TProps {}\n\nconst VALIDATION_DEBOUNCE_TIME_MILLIS = 500;\n\nconst App: React.FC<TProps> = props => {\n  const [monsters, setMonsters] = React.useState<IMonster[]>([]);\n  const [searchField, setSearchField] = React.useState<string>('');\n\n  useEffect(() => {\n    fromFetch('https://jsonplaceholder.typicode.com/users')\n      .pipe(\n        filter(res => res.ok),\n        switchMap(response => response.json()),\n        tap(users => setMonsters(users)),\n        catchError(err => of({ error: true, message: err.message }))\n      )\n      .subscribe(console.log);\n  }, []);\n\n  const validateDebounced = useDebounced<string>(\n    VALIDATION_DEBOUNCE_TIME_MILLIS,\n    setSearchField\n  );\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const value = event.target.value;\n    validateDebounced(value);\n  };\n\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLocaleLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n      <SearchBox placeholder='Search Monsters' handleChange={onChange} />\n      <CardList monsters={filteredMonsters}>\n        {monsters.map((monster: IMonster) => (\n          <h1 key={monster.id}>{monster.name}</h1>\n        ))}\n      </CardList>\n    </div>\n  );\n};\n\nexport default App;\n","import { Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport function useDebounced<T>(\n  dueTime: number,\n  effect: (value: T) => void\n): (value: T) => void {\n  const [input$] = useState(new Subject<T>())\n  const callbackEffect = useCallback(effect, [])\n  useEffect(() => {\n    input$\n      .pipe(debounceTime(dueTime), distinctUntilChanged())\n      .subscribe(callbackEffect)\n  }, [dueTime, input$, callbackEffect])\n  return (value: T): void => input$.next(value)\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.css';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}